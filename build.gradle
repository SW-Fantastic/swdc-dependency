/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

group = 'org.swdc'
version = '0.1.3'
description = 'application-component'
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    maven {
        url = uri('https://maven.aliyun.com/nexus/content/groups/public/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'org.slf4j:slf4j-api:1.7.5'
    implementation 'jakarta.inject:jakarta.inject-api:2.0.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'
    implementation 'net.bytebuddy:byte-buddy:1.10.14'
    implementation 'io.github.classgraph:classgraph:4.8.102'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    useJUnitPlatform()
}

task copyResources(type: Copy) {
    from sourceSets.main.resources
    into sourceSets.main.java.outputDir
    processResources.exclude("**/*.*")
}

processResources.dependsOn copyResources

compileJava {
    options.compilerArgs += ['--module-path', classpath.asPath]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
